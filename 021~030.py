# 021 문자열 인덱싱
# letters가 바인딩하는 문자열에서 첫번째와 세번째 문자를 출력하세요.
# >> letters = 'python'
# 실행 예
# p t
# 내 답안
letters = 'python'
print(letters[0], letters[2])

# 022 문자열 슬라이싱
# 자동차 번호가 다음과 같을 때 뒤에 4자리만 출력하세요.
# >> license_plate = "24가 2210"
# 실행 예: 2210
# 내 답안
license_plate = "24가 2210"
print(license_plate[4],license_plate[5],license_plate[6],license_plate[7])
#정답확인
# 문자열에서 여러 글자를 가져오는 것을 슬라이싱이라고 부릅니다.
# 음수 값은 문자열의 뒤에서부터 인덱싱 또는 슬라이싱함을 의미합니다.
# 슬라이싱에서 시작 인덱스를 생락혀면 0으로 간주하고 끝 인덱스를 생략하면 문자열의 끝을 의미합니다.
license_plate = "24가 2210"
print(license_plate[-4:])

# 023 문자열 인덱싱
# 아래의 문자열에서 '홀' 만 출력하세요.
# >> string = "홀짝홀짝홀짝"
# 실행 예:
# 홀홀홀
# 내 답안
# 슬라이싱할 때 `시작인덱스:끝인덱스:오프셋`을 지정할 수 있습니다.
string = "홀짝홀짝홀짝"
print(string[::2])

# 인덱싱: 문자열에서 한글자씩 가져오는 것.
# 예시) 리스트명[숫자] - 리스트에서 숫자에 해당하는 글자를 인덱싱하라
# 슬라이싱: 특정범위를 잘라서 자른부위 전체를 가져오는것.
# 예시) 리스트명[시작인덱스(숫자): 끝인덱스(숫자): 오프셋(숫자)]
# 시작인덱스부터 끝인덱스까지 슬라이싱한다.
# 오프셋은 생략이 가능하며, 입력할 경우 해당 숫자만큼 건너뛰면서 계산한다.
# 시작인덱스와 끝인덱스도 생략이 가능하다.
# 시작인덱스 생략하면 맨처음부터, 끝인덱스 생략하면 맨마지막까지로 처리된다.
# 인덱스에 음수값을 입력할 수도 있다.
# 맨앞은 0 번부터 시작하지만, 맨뒤는 - 1 부터 시작한다.
# 시작인덱스와 끝인덱스를 생략하고 오프셋에 - 1 을 넣으면 뒤집어진다.
# 인덱싱
exmple = 'sample'
print(exmple[0], exmple[3])
# 슬라이싱
exmple_2 = "slicing Sample"
print(exmple_2[2:5])
# 뒤집기
num_str = "12345"
print(num_str[::-1])